name: docs

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+a[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+b[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+rc[0-9]+'

jobs:
  build_docs:
    name: Documentation
    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: false
    timeout-minutes: 120
    defaults:
      run:
        shell: bash -l {0}
    env:
      DESC: "Documentation build"
      CHANS_DEV: "-c pyviz/label/dev -c bokeh -c conda-forge"
      MPLBACKEND: "Agg"
      MOZ_HEADLESS: 1
      DISPLAY: ":99.0"
      PANEL_IPYWIDGET: 1
    steps:
      - name: remove nodejs
        run: |
          sudo rm /usr/local/bin/node
          sudo rm /usr/local/bin/npm
      - uses: actions/checkout@v2
        with:
          fetch-depth: "100"
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
      - name: Fetch unshallow
        run: git fetch --prune --tags --unshallow -f
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: conda setup
        run: |
          conda config --set always_yes True
          conda install -c pyviz "pyctdev>=0.5"
          doit ecosystem_setup
          doit env_create ${{ env.CHANS_DEV}} --python=3.7
      - uses: actions/setup-node@v2
        with:
          node-version: '15'
      - name: doit develop_install
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          conda install ${{ env.CHANS_DEV }} "pip<21.2.1" 
          conda list
          doit develop_install ${{ env.CHANS_DEV}} -o doc -o examples
          pip install pydeck sphinxcontrib-napoleon pyecharts
          pip install idom pydata_sphinx_theme
      - name: opengl
        run: |
          sudo apt-get install libglu1-mesa
          conda install -c conda-forge mesalib
          /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x24
          sleep 3
      - name: bokeh sampledata
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          bokeh sampledata
      - name: generate rst
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          nbsite generate-rst --org holoviz --project-name panel
      - name: refmanual
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          python ./doc/generate_modules.py panel -d ./doc/api -n panel -e tests
      - name: build docs
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          nbsite build --what=html --output=builtdocs --org holoviz --project-name panel
          cp -r ./panel/dist ./builtdocs/panel_dist
      - name: git status
        run: |
          git status
          git diff
      - name: Deploy dev
        uses: peaceiris/actions-gh-pages@v3
        if: (contains(steps.vars.outputs.tag, 'a') || contains(steps.vars.outputs.tag, 'b') || contains(steps.vars.outputs.tag, 'rc'))
        with:
          personal_token: ${{ secrets.ACCESS_TOKEN }}
          external_repository: pyviz-dev/panel
          publish_dir: ./builtdocs
          force_orphan: true
      - name: Deploy main
        if: (!(contains(steps.vars.outputs.tag, 'a') || contains(steps.vars.outputs.tag, 'b') || contains(steps.vars.outputs.tag, 'rc')))
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./builtdocs
          cname: panel.holoviz.org
          force_orphan: true
